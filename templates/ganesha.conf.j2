# {{ ansible_managed }}
NFS_CORE_PARAM
{
    clustered = false;
    enable_nlm = false;
    enable_rquota = true;
    nfs_port = {{ ganesha_nfs_core__nfs_port }};
    nfs_protocols = {{ ganesha_nfs_core__nfs_protocols }};
}

NFS_KRB5
{
    PrincipalName = {{ ganesha_nfs_krb5__principalname }};
    KeytabPath = /etc/krb5.keytab;
    Active_krb5 = {{ ganesha_nfs_krb5__active_krb5 }};
}

{% for export in ganesha_exports %}
EXPORT
{
    Export_Id = {{ export.export_id }};
    Path = {{ export.path }};
    Pseudo = {{ export.pseudo }};
    FSAL {
        Name = VFS;
    }
    Access_type = {{ export.access_type | default(ganesha_export_default__access_type) }};
    Squash = {{ export.squash | default(ganesha_export_default__squash) }};
    Disable_ACL = {{ export.disable_acl | default(ganesha_export_default__disable_acl) }};
    Protocols = {{ ganesha_nfs_core__nfs_protocols }}
    Transports = {{ export.transports | default(ganesha_export_default__transports) }};
    SecType = {{ export.sectype | default(ganesha_export_default__sectype) }};
    # replace groups with ones from AD, bypasses the 16 group limit
    manage_gids = {{ export.manage_gids | default(ganesha_export_default__manage_gids) }};

    {% if export.clients is defined and export.clients|length > 0 %}
        {% for client in export.clients %}
    CLIENT {
      Clients = {{ client }};
    }
        {% endfor %}
    {% endif %}
}
{% endfor %}

NFSV4
{
    allow_numeric_owners = {{ ganesha_nfsv4__allow_numeric_owners }};
    only_numeric_owners = {{ ganesha_nfsv4__only_numeric_owners }};
    # Use PAM instead of nfsidmap, prevents a warning with machine objects
    usegetpwnam = {{ ganesha_nfsv4__usegetpwnam }};
}

DIRECTORY_SERVICES
{
    idmapped_user_time_validity = {{ ganesha_directory_services__idmapped_user_time_validity }};
    idmapped_group_time_validity = {{ ganesha_directory_services__idmapped_group_time_validity }};
    domainname = {{ ganesha_directory_services__domainname }};
    idmapping_active = {{ ganesha_directory_services__idmapping_active }};
}

LOG
{
    Default_Log_Level = {{ ganesha_log__default_log_level }};
    {% if ganesha_log__components is defined and ganesha_log__components|length > 0 %}
    COMPONENTS {
        {% for component in ganesha_log__components %}
            {% for key, value in component.items() %}
        {{ key }}: {{ value }};
            {% endfor %}
        {% endfor %}
    }
    {% endif %}
}
